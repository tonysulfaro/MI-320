demo()
seq(from = 5, to = -11, by=.3)
seq(from = 5, to = -11, by=-.3)
length(seq(from = 5, to = -11, by=-.3))
# question 1
thing = seq(from = 5, to = -11, by=-0.3)
thing_length = length(thing)
thing
thing_length
# question 2
vec = c(-1,3,-5,7,-9)
rep(x = vec*2, times=10)
# question 2
vec = c(-1,3,-5,7,-9)
rep(x = vec*2, times=10)
rep(x = vec,each=2, times=10)
rep(x = vec,each=10, times=2)
sort(rep(x = vec,each=10, times=2))
sort?
1
?sort
sort(rep(x = vec,each=10, times=2), decreasing = FALSE)
sort(rep(x = vec,each=10, times=2), decreasing = TRUE)
sort(rep(x = vec,each=10, times=2), decreasing = TRUE)
# question 2
vec = c(-1,3,-5,7,-9)
sorted_repeated = sort(rep(x = vec,each=10, times=2), decreasing = TRUE)
sorted_repeated
# question 3
first_last = c(sorted_repeated[1],sorted_repeated[length(sorted_repeated)])
first_last
# question 4
matrix_data = c(1,1,1,1,1,1,1,1,1,11,11,11,12,12,12,13,13,13,1,2,3,1,2,3,1,2,3)
matrix(matrix_data, nrow = 9, ncol = 3)
# question 4
matrix_data = c(1,1,1,1,1,1,1,1,1,11,11,11,12,12,12,13,13,13,1,2,3,1,2,3,1,2,3,2.76,8.68,3.94,3.95,3.94,3.08,3.55,2.42,3.62)
matrix(matrix_data, nrow = 9, ncol = 3)
# question 4
matrix_data = c(1,1,1,1,1,1,1,1,1,11,11,11,12,12,12,13,13,13,1,2,3,1,2,3,1,2,3,2.76,8.68,3.94,3.95,3.94,3.08,3.55,2.42,3.62)
matrix(matrix_data, nrow = 9, ncol = 4)
# question 4
matrix_data = c(1,1,1,1,1,1,1,1,1,11,11,11,12,12,12,13,13,13,1,2,3,1,2,3,1,2,3,2.76,8.68,3.94,3.95,3.94,3.08,3.55,2.42,3.62)
matrix(matrix_data, nrow = 9, ncol = 5)
# question 4
matrix_data = c(1,1,1,1,1,1,1,1,1,11,11,11,12,12,12,13,13,13,1,2,3,1,2,3,1,2,3,2.76,8.68,3.94,3.95,3.94,3.08,3.55,2.42,3.62)
matrix(matrix_data, nrow = 9, ncol = 4)
# question 4
matrix_data = c(1,1,1,1,1,1,1,1,1,11,11,11,12,12,12,13,13,13,1,2,3,1,2,3,1,2,3,2.76,8.68,3.94,3.95,3.94,3.08,3.55,2.42,3.62)
matrix(matrix_data, nrow = 9, ncol = 5)
# question 4
matrix_data = c(1,1,1,1,1,1,1,1,1,11,11,11,12,12,12,13,13,13,1,2,3,1,2,3,1,2,3,2.76,8.68,3.94,3.95,3.94,3.08,3.55,2.42,3.62,6.14,27.46,11.08,25.24,13.54,7.23,10.06,10.69,10.7)
matrix(matrix_data, nrow = 9, ncol = 5)
# question 4
matrix_data = c(1,1,1,1,1,1,1,1,1,11,11,11,12,12,12,13,13,13,1,2,3,1,2,3,1,2,3,2.76,8.68,3.94,3.95,3.94,3.08,3.55,2.42,3.62,6.14,27.46,11.08,25.24,13.54,7.23,10.06,10.69,10.7)
result_matrix = matrix(matrix_data, nrow = 9, ncol = 5)
# question 5
dim(result_matrix)
# question 6
first_duration = result_matrix[1][5]
first_duration
# question 6
first_duration = result_matrix[1,5]
first_duration
c(result_matrix[,5])
c(result_matrix[,4])
# question 7
c(result_matrix[1,4],result_matrix[4,4],result_matrix[7,4])
# question 7
first_trips = c(result_matrix[1,4],result_matrix[4,4],result_matrix[7,4])
# question 8
v: c(6,9,7,3,6,7,9,6,3,6,6,7,1,9,1)
# question 8
v = c(6,9,7,3,6,7,9,6,3,6,6,7,1,9,1)
v
# question 9
which(v == 6)
which(v < 6)
which(v >= 6)
# question 9
v == 6
# question 9
v == 6
v <= 6
v >= 6
# question 10
which(v == 6)
which(v < 6)
which(v >= 6)
# question 10
which(v == 6)
which(v < 6+2)
which(v != 6)
# question 11
v[(v == 9) | (v == 1)]
v[(v>5)|(v<2)]
# question 11
v[(v == 9) | (v == 1)]
v[(v>5)|(v<2)]
# question 12
source("Week2_Lab_automatic_data.R")
# question 12
source("Week2_Lab_automatic_data.R")
# question 12
source("Week2_Lab_automatic_data.R")
setwd("~/Documents/GitHub/MI-320/Labs/lab02 - Essential R Operations")
# question 12
source("Week2_Lab_automatic_data.R")
# question 12
df = source("Week2_Lab_automatic_data.R")
df
dim(df)
str(df)
# question 13
df$hard.brake
df
df$visible = TRUE
df
# question 13
df$hard.brake
# question 12
df = data.frame(source("Week2_Lab_automatic_data.R"))
df
dim(df)
str(df)
# question 13
df$hard.brake
# question 13
brake_data = df$hard.brake
brake_data
head(df)
head(df.date)
names(df)
# question 13
brake_data = df$value.hard.brake
brake_data
# question 14
df$value.date = factor(df$value.date)
dim(df)
str(df)
str(df)
df
# b
df$value.hard.accel = as.logical(df$value.hard.accel)
df
str(df)
df$value.hard.brake = as.logical(df$value.hard.brake)
df
str(df)
# question 14
# a
df$value.date = factor(df$value.date)
# b
df$value.hard.accel = as.logical(df$value.hard.accel)
df$value.hard.brake = as.logical(df$value.hard.brake)
# question 15
which(df$value.hard.accel & df$value.hard.brake)
# b
length(which(df$value.distance.mi > 10))
# c
length(which(df$value.distance.mi < 3 & df$value.duration.min > 5))
# d
avg.mpg.over20 = df[(df$value.avg.mpg > 20)]
# d
df$avg.mpg.over20 = df[(df$value.avg.mpg > 20)]
# d
avg.mpg.over20 = df[df$value.avg.mpg > 20]
# d
df$value.avg.mpg.over20 = df$value.avg.mpg > 20
str(df)
# question 15
# a
which(df$value.hard.accel & df$value.hard.brake)
# b
length(which(df$value.distance.mi > 10))
# c
length(which(df$value.distance.mi < 3 & df$value.duration.min > 5))
# d
df$value.avg.mpg.over20 = df$value.avg.mpg > 20
savehistory("~/Documents/GitHub/MI-320/Labs/lab02 - Essential R Operations/lab02.Rhistory")
