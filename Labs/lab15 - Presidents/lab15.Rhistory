demo()
library(tidyverse)
data=read_csv("Tornadoes_SPC_1950to2015.csv", col_types=cols(loss=col_double(), closs=col_double(),date=col_date("%m/%d/%Y"),mag=col_character(),stf=col_character()))
setwd("~/Documents/GitHub/MI-320/Labs/lab15 - Presidents")
install.packages("tidytext")
install.packages("wordcloud")
install.packages("tidyspeeches")
# data are from:
# https://www.kaggle.com/adhok93/presidentialaddress
# https://www.kaggle.com/harshitagpt/us-presidents/version/1#
# first you may need to install some packages:
# install.packages("tidytext")
# install.packages("tm") -- a dependency of "topicmodels"
# install.packages("wordcloud")
# install.packages("RColorBrewer") -- a dependency of wordcloud
# load the libraries
library(tidytext)
library(wordcloud)
library(tidyverse)
# load the data
inaug_speeches <- read_csv("inaug_speeches.csv")
us_presidents <- read_csv("us_presidents.csv")
# join together the two data tables and select the columns we want to use
# then rename a few of the columns
speeches <- inaug_speeches %>%
inner_join(us_presidents %>% select(president, party), by=c("Name"="president")) %>%
select(Name, party, `Inaugural Address`, Date, text) %>%
dplyr::rename(president = Name,
title = `Inaugural Address`)
# separate each speech into lines by semicolons and periods
# substitute a normal space for a non-breaking space
# remove some weird strings of numbers that appear in some of the speeches
# remove quotation marks from beginning and end of each line
# remove extra spaces from beginning and end of each line
# add line numbers to each speech
# select to rearrange columns
speeches <- speeches %>%
separate_rows(text, sep="[.]") %>%
separate_rows(text, sep="[;]") %>%
mutate(text = gsub("\u00A0", " ", text, fixed = TRUE),
text = gsub("0097", " ", text, fixed = TRUE),
text = gsub("0092", " ", text, fixed = TRUE),
text = gsub("0093", " ", text, fixed = TRUE),
text = gsub("0094", " ", text, fixed = TRUE),
text = gsub("0085", " ", text, fixed = TRUE),
text = gsub('[\"]', '', text),
text = trimws(text, which="both")) %>%
group_by(president, title) %>%
mutate(line = row_number()) %>%
ungroup() %>%
select(president, title, party, line, text)
# load the data
inaug_speeches <- read_csv("inaug_speeches.csv")
us_presidents <- read_csv("us_presidents.csv")
# join together the two data tables and select the columns we want to use
# then rename a few of the columns
speeches <- inaug_speeches %>%
inner_join(us_presidents %>% select(president, party), by=c("Name"="president")) %>%
select(Name, party, `Inaugural Address`, Date, text) %>%
dplyr::rename(president = Name,
title = `Inaugural Address`)
# separate each speech into lines by semicolons and periods
# substitute a normal space for a non-breaking space
# remove some weird strings of numbers that appear in some of the speeches
# remove quotation marks from beginning and end of each line
# remove extra spaces from beginning and end of each line
# add line numbers to each speech
# select to rearrange columns
speeches <- speeches %>%
separate_rows(text, sep="[.]") %>%
separate_rows(text, sep="[;]") %>%
mutate(text = gsub("\u00A0", " ", text, fixed = TRUE),
text = gsub("0097", " ", text, fixed = TRUE),
text = gsub("0092", " ", text, fixed = TRUE),
text = gsub("0093", " ", text, fixed = TRUE),
text = gsub("0094", " ", text, fixed = TRUE),
text = gsub("0085", " ", text, fixed = TRUE),
text = gsub('[\"]', '', text),
text = trimws(text, which="both")) %>%
group_by(president, title) %>%
mutate(line = row_number()) %>%
ungroup() %>%
select(president, title, party, line, text)
speeches
# data are from:
# https://www.kaggle.com/adhok93/presidentialaddress
# https://www.kaggle.com/harshitagpt/us-presidents/version/1#
# first you may need to install some packages:
# install.packages("tidytext")
# install.packages("tm") -- a dependency of "topicmodels"
# install.packages("wordcloud")
# install.packages("RColorBrewer") -- a dependency of wordcloud
# load the libraries
library(tidytext)
library(wordcloud)
library(tidyverse)
# load the data
inaug_speeches <- read_csv("inaug_speeches.csv")
us_presidents <- read_csv("us_presidents.csv")
# join together the two data tables and select the columns we want to use
# then rename a few of the columns
speeches <- inaug_speeches %>%
inner_join(us_presidents %>% select(president, party), by=c("Name"="president")) %>%
select(Name, party, `Inaugural Address`, Date, text) %>%
dplyr::rename(president = Name,
title = `Inaugural Address`)
# separate each speech into lines by semicolons and periods
# substitute a normal space for a non-breaking space
# remove some weird strings of numbers that appear in some of the speeches
# remove quotation marks from beginning and end of each line
# remove extra spaces from beginning and end of each line
# add line numbers to each speech
# select to rearrange columns
speeches <- speeches %>%
separate_rows(text, sep="[.]") %>%
separate_rows(text, sep="[;]") %>%
mutate(text = gsub("\u00A0", " ", text, fixed = TRUE),
text = gsub("0097", " ", text, fixed = TRUE),
text = gsub("0092", " ", text, fixed = TRUE),
text = gsub("0093", " ", text, fixed = TRUE),
text = gsub("0094", " ", text, fixed = TRUE),
text = gsub("0085", " ", text, fixed = TRUE),
text = gsub('[\"]', '', text),
text = trimws(text, which="both")) %>%
group_by(president, title) %>%
mutate(line = row_number()) %>%
ungroup() %>%
select(president, title, party, line, text)
speeches
speeches
# load the data
inaug_speeches <- read_csv("inaug_speeches.csv")
us_presidents <- read_csv("us_presidents.csv")
# join together the two data tables and select the columns we want to use
# then rename a few of the columns
speeches <- inaug_speeches %>%
inner_join(us_presidents %>% select(president, party), by=c("Name"="president")) %>%
select(Name, party, `Inaugural Address`, Date, text) %>%
dplyr::rename(president = Name,
title = `Inaugural Address`)
# separate each speech into lines by semicolons and periods
# substitute a normal space for a non-breaking space
# remove some weird strings of numbers that appear in some of the speeches
# remove quotation marks from beginning and end of each line
# remove extra spaces from beginning and end of each line
# add line numbers to each speech
# select to rearrange columns
speeches <- speeches %>%
separate_rows(text, sep="[.]") %>%
separate_rows(text, sep="[;]") %>%
mutate(text = gsub("\u00A0", " ", text, fixed = TRUE),
text = gsub("0097", " ", text, fixed = TRUE),
text = gsub("0092", " ", text, fixed = TRUE),
text = gsub("0093", " ", text, fixed = TRUE),
text = gsub("0094", " ", text, fixed = TRUE),
text = gsub("0085", " ", text, fixed = TRUE),
text = gsub('[\"]', '', text),
text = trimws(text, which="both")) %>%
group_by(president, title) %>%
mutate(line = row_number()) %>%
ungroup() %>%
select(president, title, party, line, text)
speeches
tidyspeeches = speeches %>%
unnest_tokens(word, text)
tidyspeeches = speeches %>%
unnest_tokens(word, text)
tidyspeeches
tidyspeeches = tidyspeeches %>%
group_by(title) %>%
mutate(line = row_number()) %>%
unnest_tokens(word, text) %>%   # unnest_tokens is a function in tidytext
anti_join(stop_words) %>%       # stop_words is an object in tidytext
ungroup()
tidyspeeches = tidyspeeches %>%
mutate(line = row_number()) %>%
anti_join(stop_words) %>%       # stop_words is an object in tidytext
tidyspeeches = tidyspeeches %>%
mutate(line = row_number()) %>%
anti_join(stop_words)      # stop_words is an object in tidytext
tidyspeeches = tidyspeeches %>%
mutate(line = row_number()) %>%
anti_join(stop_words)      # stop_words is an object in tidytext
tidyspeeches
tidyspeeches %>% count(word) %>% arrange(desc(n))
speeches_stopwords <- tibble(word = c("government", "people", "world", "country", "nation", "america", "american", "americans", "united", "constitution", "citizens"))
tidyspeeches = tidyspeeches %>%
anti_join(speeches_stopwords)      # stop_words is an object in tidytext
tidyspeeches
speeches_stopwords <- tibble(word = c("government", "people", "world", "country", "nation", "america", "american", "americans", "united", "constitution", "citizens"))
tidyspeeches = tidyspeeches %>%
anti_join(speeches_stopwords)      # stop_words is an object in tidytext
tidyspeeches
tidyspeeches %>% count(word) %>% arrange(desc(n))
tidyspeeches %>%
filter(president == "George Washington" & title == "First Inagural Address") %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
tidyspeeches %>%
#filter(president == "George Washington" & title == "First Inagural Address") %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
tidyspeeches %>%
filter(president == "George Washington") %>%
#filter(president == "George Washington" & title == "First Inagural Address") %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
tidyspeeches %>%
filter(president == "George Washington") %>%
filter(title = "First Inaugural Address") %>%
#filter(president == "George Washington" & title == "First Inagural Address") %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
tidyspeeches %>%
filter(president == "George Washington") %>%
filter(title == "First Inaugural Address") %>%
#filter(president == "George Washington" & title == "First Inagural Address") %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
tidyspeeches %>%
filter(president == "Abraham Lincoln") %>%
filter(title == "First Inaugural Address") %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
tidyspeeches %>%
filter(president == "Donald J. Trump") %>%
filter(title == "Inaugural Address") %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
tidyspeeches %>%
filter(president == "Barack Obama") %>%
filter(title == "Second Inaugural Address") %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
tidyspeeches %>%
filter(president == "John F. Kennedy") %>%
filter(title == "Inaugural Address") %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
tidyspeeches %>%
filter(president == "Franklin D. Roosevelt") %>%
filter(title == "Third Inaugural Address") %>%
count(word) %>%
with(wordcloud(word, n, max.words = 100))
sentiments = tidyspeeches %>%
inner_join(get_sentiments("bing"))
sentiments
sentiments %>%
filter((president == "George Washington" & title == "First Inaugural Address") |
(president == "Abraham Lincoln" & title == "First Inaugural Address") |
(president == "Franklin D. Roosevelt" & title == "Third Inaugural Address") |
(president == "John F. Kennedy" & title == "Inaugural Address") |
(president == "Barack Obama" & title == "Second Inaugural Address") |
(president == "Donald J. Trump" & title == "Inaugural Address")) %>%
group_by(president, sentiment) %>%
sentiments %>%
filter((president == "George Washington" & title == "First Inaugural Address") |
(president == "Abraham Lincoln" & title == "First Inaugural Address") |
(president == "Franklin D. Roosevelt" & title == "Third Inaugural Address") |
(president == "John F. Kennedy" & title == "Inaugural Address") |
(president == "Barack Obama" & title == "Second Inaugural Address") |
(president == "Donald J. Trump" & title == "Inaugural Address")) %>%
group_by(president, sentiment) %>%
facet_grid(~president)
sentiments %>%
filter((president == "George Washington" & title == "First Inaugural Address") |
(president == "Abraham Lincoln" & title == "First Inaugural Address") |
(president == "Franklin D. Roosevelt" & title == "Third Inaugural Address") |
(president == "John F. Kennedy" & title == "Inaugural Address") |
(president == "Barack Obama" & title == "Second Inaugural Address") |
(president == "Donald J. Trump" & title == "Inaugural Address")) %>%
group_by(president, sentiment) %>%
with(wordcloud(word, n, max.words = 100))
sentiments %>%
filter((president == "George Washington" & title == "First Inaugural Address") |
(president == "Abraham Lincoln" & title == "First Inaugural Address") |
(president == "Franklin D. Roosevelt" & title == "Third Inaugural Address") |
(president == "John F. Kennedy" & title == "Inaugural Address") |
(president == "Barack Obama" & title == "Second Inaugural Address") |
(president == "Donald J. Trump" & title == "Inaugural Address")) %>%
group_by(president, sentiment)
a = sentiments %>%
filter((president == "George Washington" & title == "First Inaugural Address") |
(president == "Abraham Lincoln" & title == "First Inaugural Address") |
(president == "Franklin D. Roosevelt" & title == "Third Inaugural Address") |
(president == "John F. Kennedy" & title == "Inaugural Address") |
(president == "Barack Obama" & title == "Second Inaugural Address") |
(president == "Donald J. Trump" & title == "Inaugural Address")) %>%
group_by(president, sentiment)
a
a = sentiments %>%
filter((president == "George Washington" & title == "First Inaugural Address") |
(president == "Abraham Lincoln" & title == "First Inaugural Address") |
(president == "Franklin D. Roosevelt" & title == "Third Inaugural Address") |
(president == "John F. Kennedy" & title == "Inaugural Address") |
(president == "Barack Obama" & title == "Second Inaugural Address") |
(president == "Donald J. Trump" & title == "Inaugural Address")) %>%
group_by(president, sentiment) %>%
mutate(count = n())
a
a = sentiments %>%
filter((president == "George Washington" & title == "First Inaugural Address") |
(president == "Abraham Lincoln" & title == "First Inaugural Address") |
(president == "Franklin D. Roosevelt" & title == "Third Inaugural Address") |
(president == "John F. Kennedy" & title == "Inaugural Address") |
(president == "Barack Obama" & title == "Second Inaugural Address") |
(president == "Donald J. Trump" & title == "Inaugural Address")) %>%
group_by(president, sentiment)
ggplot(a, aes(x=sentiment)) +
geom_bar() +
theme_minimal() +
labs(x = "Year",
y="Relative Percentage",
title="Proportions of Good and Bad Characters by Gender and Publisher",
caption="Other genders omitted for this example")
a = sentiments %>%
filter((president == "George Washington" & title == "First Inaugural Address") |
(president == "Abraham Lincoln" & title == "First Inaugural Address") |
(president == "Franklin D. Roosevelt" & title == "Third Inaugural Address") |
(president == "John F. Kennedy" & title == "Inaugural Address") |
(president == "Barack Obama" & title == "Second Inaugural Address") |
(president == "Donald J. Trump" & title == "Inaugural Address")) %>%
group_by(president, sentiment)
ggplot(a, aes(x=sentiment)) +
geom_bar() +
theme_minimal() +
labs(x = "Year",
y="Relative Percentage",
title="Proportions of Good and Bad Characters by Gender and Publisher",
caption="Other genders omitted for this example") +
facet_grid(~president)
sentiments %>%
filter((president == "George Washington" & title == "First Inaugural Address") |
(president == "Abraham Lincoln" & title == "First Inaugural Address") |
(president == "Franklin D. Roosevelt" & title == "Third Inaugural Address") |
(president == "John F. Kennedy" & title == "Inaugural Address") |
(president == "Barack Obama" & title == "Second Inaugural Address") |
(president == "Donald J. Trump" & title == "Inaugural Address")) %>%
group_by(president, sentiment) %>%
summarize(n = n()) %>%
mutate(percent = n / sum(n) * 100) %>%
ggplot(aes(x = sentiment, y = percent, fill = sentiment)) +
geom_bar(stat = "identity") +
facet_wrap(~title)
sentiments %>%
filter((president == "George Washington" & title == "First Inaugural Address") |
(president == "Abraham Lincoln" & title == "First Inaugural Address") |
(president == "Franklin D. Roosevelt" & title == "Third Inaugural Address") |
(president == "John F. Kennedy" & title == "Inaugural Address") |
(president == "Barack Obama" & title == "Second Inaugural Address") |
(president == "Donald J. Trump" & title == "Inaugural Address")) %>%
group_by(president, sentiment) %>%
summarize(n = n()) %>%
mutate(percent = n / sum(n) * 100) %>%
ggplot(aes(x = sentiment, y = percent, fill = sentiment)) +
geom_bar(stat = "identity") +
facet_wrap(~president)
sentiments %>%
filter((president == "George Washington" & title == "First Inaugural Address") |
(president == "Abraham Lincoln" & title == "First Inaugural Address") |
(president == "Franklin D. Roosevelt" & title == "Third Inaugural Address") |
(president == "John F. Kennedy" & title == "Inaugural Address") |
(president == "Barack Obama" & title == "Second Inaugural Address") |
(president == "Donald J. Trump" & title == "Inaugural Address")) %>%
group_by(president, sentiment) %>%
summarize(n = n()) %>%
mutate(percent = n / sum(n) * 100) %>%
ggplot(aes(x = sentiment, y = percent, fill = sentiment)) +
geom_bar(stat = "identity") +
facet_wrap(~president) +
labs(x = "Year",
y="Relative Percentage",
title="Proportions of Good and Bad Characters by Gender and Publisher",
caption="Other genders omitted for this example") +
theme_minimal()
sentiments %>%
filter((president == "George Washington" & title == "First Inaugural Address") |
(president == "Abraham Lincoln" & title == "First Inaugural Address") |
(president == "Franklin D. Roosevelt" & title == "Third Inaugural Address") |
(president == "John F. Kennedy" & title == "Inaugural Address") |
(president == "Barack Obama" & title == "Second Inaugural Address") |
(president == "Donald J. Trump" & title == "Inaugural Address")) %>%
group_by(president, sentiment) %>%
summarize(n = n()) %>%
mutate(percent = n / sum(n) * 100) %>%
ggplot(aes(x = sentiment, y = percent, fill = sentiment)) +
geom_bar(stat = "identity") +
facet_wrap(~president) +
labs(x = "President",
y="Percentage of Positive and Negative Words",
title="Proportions of Positive and Negative Words in Presidential Inagural Speeches")
savehistory("~/Documents/GitHub/MI-320/Labs/lab15 - Presidents/lab15.Rhistory")
