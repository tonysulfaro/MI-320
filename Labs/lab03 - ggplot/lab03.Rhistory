setwd("~/")
paste('testy test test')
# question 01
install.packages("tidyverse")
library(ggplot2)
# question 02
?diamonds
str(diamonds)
# question 03
dim(diamonds)
# question 04
# cut describes categorical cut of the diamond, (Fair, Good, Very Good, Premium, Ideal)
# question 05
# Categorical: Cut, Color, Clarity
# continuous : price, x, y, z, depth, weight
# question 05
# Categorical: Cut, Color, Clarity
# they are finite values, not infinite
# continuous : price, x, y, z, depth, weight
# Infinite number of values
# question 06
ggplot(data = diamonds) +
geom_point(mapping = aes(x=carat, y=price))
# looks like A:
# question 06
ggplot(data = diamonds) +
geom_point(mapping = aes(x=carat, y=price, color = color))
# looks like A:
# question 07
# get some color in here
ggplot(data = diamonds) +
geom_point(mapping = aes(x=carat, y=price, color = color))
# question 08
ggplot(data = diamonds) +
geom_point(mapping = aes(x=carat, y=price, color = color))
# question 09
# there is a positive correlation between good or better color and price per carat
# question 10
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
# question 10
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut), color = "blue")
# question 10
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut), fill = "blue")
# question 11
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut), fill = clarity)
# question 11
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut,fill = clarity))
# question 10
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
# looks like C:
# question 11
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut), fill = "blue")
# question 12
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut,fill = clarity))
# question 13
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut,fill = clarity), position="dodge")
# question 14
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut,fill = clarity), position="dodge") +
ggtitle("Number of Diamonds by cut and clarity") +
xlab("Cut Category") +
ylab("Count")
# question 15
# based on the plot it would appear that ideal cuts of quality SI1,VS2 are most common
# question 16
ggplot(data = diamonds) +
geom_point(mapping = aes(x=clarity, y=color))
# question 16
ggplot(data = diamonds) +
geom_point(mapping = aes(x=color, y=clarity))
# question 17
ggplot(data = diamonds) +
geom_bar(mapping = aes(x=color, y=clarity))
# question 17
ggplot(data = diamonds) +
geom_bar(mapping = aes(x=color,clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity,fill = color), position="dodge")
# question 18
# It isnt useful because its just a grid of color and clarity, no quantitative data
# question 19
ggplot(data = diamonds) +
geom_point(mapping = aes(x=color, y=clarity), position = "jitter")
# question 20
# instead of mapping intersections with one point it shows multiple points in an area to indicate density
diamonds.sample = diamonds[sample(1:nrow(diamonds),100,replace=FALSE),]
diamonds.sample
ggplot(data = diamonds.sample) +
geom_point(mapping = aes(x=carat, y=price), position = "jitter")
?diamonds
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity,fill = color), position="dodge")
# question 17
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity,fill = color), position="dodge")
ggplot(data = diamonds.sample) +
geom_contour(mapping = aes(x=carat, y=price), position = "jitter")
ggplot(data = diamonds.sample) +
geom_smooth(mapping = aes(x=carat, y=price), position = "jitter")
ggplot(data = diamonds.sample) +
geom_smooth(mapping = aes(x=shape, y=price), position = "jitter")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = size,fill = color), position="dodge")
# EC 23
ggplot(data = diamonds.sample) +
geom_point(mapping = aes(x=color, y=price), position = "jitter")
ggplot(data = diamonds.sample) +
geom_bar(mapping = aes(x = color,fill = color), position="dodge")
ggplot(data = diamonds.sample) +
geom_smooth(mapping = aes(x=color, y=price), position = "jitter")
# EC 22
ggplot(data = diamonds.sample) +
geom_point(mapping = aes(x=carat, y=price), position = "jitter")
# EC 23
ggplot(data = diamonds.sample) +
geom_point(mapping = aes(x=carat, y=price), position = "jitter", color = 'Blue') +
geom_point(mapping = aes(x=color, y=price), position = "jitter", color = 'Red')
# EC 23
ggplot(data = diamonds.sample) +
geom_point(mapping = aes(x=carat, y=price), position = "jitter", color = 'Blue')
# EC 22
ggplot(data = diamonds.sample) +
geom_point(mapping = aes(x=carat, y=price, depth), position = "jitter")
# EC 22
ggplot(data = diamonds.sample) +
geom_point(mapping = aes(x=carat, y=price), position = "jitter")
ggplot(data = diamonds.sample) +
geom_point(mapping = aes(x=carat, y=depth), position = "jitter")
ggplot(data = diamonds.sample) +
geom_point(mapping = aes(x=color, y=depth), position = "jitter")
ggplot(data = diamonds.sample) +
geom_point(mapping = aes(x=clarity, y=depth), position = "jitter")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity,fill = depth), position="dodge")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = clarity,fill = depth, y = depth), position="dodge")
ggplot(data = diamonds.sample) +
geom_point(mapping = aes(x=clarity, y=depth), position = "jitter")
ggplot(data = diamonds.sample) +
geom_smooth(mapping = aes(x=clarity, y=depth), position = "jitter")
ggplot(data = diamonds.sample) +
geom_contour(mapping = aes(x=clarity, y=depth), position = "jitter")
ggplot(data = diamonds.sample) +
geom_curve(mapping = aes(x=clarity, y=depth), position = "jitter")
ggplot(data = diamonds.sample) +
+   geom_smooth(mapping = aes(x=color, y=price), position = "jitter").
ggplot(data = diamonds.sample) +
+   geom_smooth(mapping = aes(x=color, y=price), position = "jitter")
ggplot(data = diamonds.sample) +
geom_smooth(mapping = aes(x=color, y=price), position = "jitter")
# EC 22
ggplot(data = diamonds.sample) +
geom_smooth(mapping = aes(x=carat, y=price), position = "jitter")
ggplot(data = diamonds.sample) +
geom_smooth(mapping = aes(x=clarity, y=depth), position = "jitter")
savehistory("~/lab03.Rhistory")
